datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                    String    @id @default(auto()) @map("_id") @db.ObjectId
  walletAddress         String    @unique
  chainId               String
  apiKey                String    @unique
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  name                  String?
  email                 String?
  bio                   String?
  avatar                String?
  language              String?
  theme                 String?
  notifications         Json?
  privacy               Json?
  twoFactor             Boolean   @default(false)
  defaultPaymentAddress String?
  paymentAddress        String?
  datasets              Dataset[]
  posts                 Post[]    // Relation to posts
  comments              Comment[] // Relation to comments
}

model Dataset {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  fileKey     String?
  publicUrl   String?
  downloads   Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?  @db.ObjectId
  tags        String[]
  isPublic    Boolean  @default(false)
  fileType    String?
}

model Post {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  content   String
  category  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  author    User      @relation(fields: [authorId], references: [id])
  authorId  String    @db.ObjectId
  comments  Comment[]
  likes     Int       @default(0)
  tags      String[]
}

model Comment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String   @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  postId    String   @db.ObjectId
  likes     Int      @default(0)
}
